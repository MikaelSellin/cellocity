Developer Information
=====================

This section contains information that I have uncovered during the development
process of this framework. I present it here in the hope that someone may find
it useful.

A note on metadata and file formats
-------------------------------------

It goes without saying that you need to have a well calibrated microscope that
writes correct metadata into your image files, in order to perform meaningful cell dynamic analysis. The minimum amount of information you need is data on pixel size and time resolution between frames. Image format specific metadata, such as Micromanager-metadata and IJmetadata contain this information and is the primary source of this information throughout Cellocity. 

Pixel resolution Micromanager vs ImageJ
---------------------------------------
Relevant standard tags in the `TIFF specification <https://www.adobe.io/open/standards/TIFF.html>`_ are **XResolution**, **YResolution**, and **ResolutionUnit**. The resolution tags are rational numbers, meaning they are generated by dividing two 32-bit integer values. **ResolutionUnit** is specified as being either *None*, *Inch* or *Centimeter*, no other units are specified.

When Micromanager saves an ome.tif it writes a rounded off value in to the XResolution and YResolution tif tags, and it sets the **ResolutionUnit** tag to CENTIMETER. This value carries less precision than the 'PixelSizeUm' entry in the custom TIFF-tag 'MicroManagerMetadata', but the TIFF is correctly readable with roughly intact size calibration data in any reader obaying the TIFF standard.

When ImageJ (v. 1.52p) saves a Hyperstack as tif, it writes the 'Pixel Width' and 'Pixel Height' values in to the **XResolution** and **YResolution** tags with high precision. However, it sets the **ResolutionUnit** tag to *None*, probably because microns are not specified in the TIFF standard.

Creating your own image format reader.
--------------------------------------

If you want to develop your own reader for your microscope raw data, I suggest you look up the `Tiffile project <https://pypi.org/project/tifffile/>`_. It already implements reading of many common tif-formats from multiple microscope vendors. It is a trivial addition to tweak the Channel object and create your own version, specific to your file format, since Channel objects are basically extenstions of Tifffile objects anyway. The easiest way to get your non-supported data in to Cellocity is to open it in FIJI with the Bioformats importer and to resave it as a hyperstack tif (making sure that the image properties are set correctly). Then you can use the ImageJ-reading capabilities built in to Cellocity.

   